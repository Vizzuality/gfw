_.templateSettings = {
  interpolate: /\{\{(.+?)\}\}/g,
  evaluate: /\[(.+?)\]/g
};

var config = {
  ZOOM:         3,
  MINZOOM:      3,
  MAXZOOM:      17,
  LAT:          15,
  LNG:          27,
  ISO:          'ALL',
  MONTHNAMES:         ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  MONTHNAMES_SHORT:   ["JAN", "FEB", "MAR", "APR", "MAY", "JUN", "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"],
  QUARTERNAMES:       ["JAN - MAR", "APR - JUN", "JUL - SEP", "OCT - DEC"],
  BASE_MAP_STYLE:     [ { "featureType": "water"  }, { "featureType": "transit", "stylers": [ { "saturation": -100 } ] }, { "featureType": "road", "stylers": [ { "saturation": -100 } ] }, { "featureType": "poi", "stylers": [ { "saturation": -100 } ] }, { "featureType": "landscape", "stylers": [ { "saturation": -100 } ] }, { "featureType": "administrative", "stylers": [ { "saturation": -100 } ] } ]
};

config.MAPOPTIONS = {
  zoom:     config.ZOOM,
  minZoom:  config.MINZOOM,
  maxZoom:  config.MAXZOOM,
  center:   new google.maps.LatLng(config.LAT, config.LNG),
  mapTypeId: google.maps.MapTypeId.TERRAIN,
  backgroundColor: '#99b3cc',
  disableDefaultUI: true,
  panControl: false,
  zoomControl: false,
  mapTypeControl: false,
  scaleControl: false,
  streetViewControl: false,
  overviewMapControl: false,
  scrollwheel: false,
  layers: ''
};

config.MAPSTYLES = {};

config.MAPSTYLES.forestsoft = new google.maps.ImageMapType({
  getTileUrl: function(ll, z) {
    var X = Math.abs(ll.x % (1 << z));  // wrap
    return "http://api.tiles.mapbox.com/v3/cartodb.global-forest-height/" + z + "/" + X + "/" + ll.y + ".png";
  },
  tileSize: new google.maps.Size(256, 256),
  isPng: true,
  maxZoom: 7,
  name: "Forest Height",
  alt: "Global forest height"
});

config.MAPSTYLES.treeheight = new google.maps.ImageMapType({
  getTileUrl: function(ll, z) {
    var X = Math.abs(ll.x % (1 << z));  // wrap
    return "http://wip.gfw-ee-tiles.appspot.com/gfw/simple_green_coverage/" + z + "/" + X + "/" + ll.y + ".png";
  },
  tileSize: new google.maps.Size(256, 256),
  isPng: true,
  maxZoom: 17,
  name: "Forest Height",
  alt: "Global forest height",
  alt: 'NASA JPL, California Institute of Technology, <a href="http://lidarradar.jpl.nasa.gov" target="_blank">3D Global Vegetation Map</a>'
});

config.MAPSTYLES.landsat = [];
window.landsat_year = [];

for(var i = 1999;i < 2013; i++) {
  window.landsat_year[i] = i;

  (function(year) {
    config.MAPSTYLES.landsat[i] = new google.maps.ImageMapType({
      getTileUrl: function(ll, z) {
        var X = Math.abs(ll.x % (1 << z));  // wrap
        return "http://wip.gfw-ee-tiles.appspot.com/gfw/landsat_composites/" + z + "/" + X + "/" + ll.y + ".png?year="+year;
      },
      tileSize: new google.maps.Size(256, 256),
      isPng: true,
      maxZoom: 17,
      name: "Landsat "+i
    });
  })(i);
}

var Road = function(){
  this.Road = function(){
    map.setMapTypeId(google.maps.MapTypeId.ROADMAP);
    map.setOptions({styles: null});
  };
};

var Satellite = function(){
  this.Satellite = function(){
    map.setMapTypeId(google.maps.MapTypeId.SATELLITE);
    map.setOptions({styles: null});
  };
};

var Hybrid = function(){
  this.Hybrid = function(){
    map.setMapTypeId(google.maps.MapTypeId.HYBRID);
    map.setOptions({styles: null});
  };
};

var Forest = function(){
  this.Forest = function(){
    map.setMapTypeId('forests');
    map.setOptions({styles: null});
  };
};

var ForestSoft = function(){
  this.ForestSoft = function(){
    map.setMapTypeId('forests_soft');
    map.setOptions({styles: null});
  };
};

var Soft = function(){
  this.Soft = function(){
    map.setMapTypeId(google.maps.MapTypeId.ROADMAP);
    map.setOptions({styles: map_style.google_maps_customization_style});
  };
};

function positionScroll() {
  if($("header").hasClass("stuck")) {
    // stuck logo to top of viewport
    if($(window).scrollTop() < 49) {
      $(".header-logo").css({
        "position": "absolute",
        "top": "44px"
      });
    } else if($(window).scrollTop() >= 49 && $(window).scrollTop() <= 112) {
      $(".header-logo").css({
        "position": "fixed",
        "top": "0"
      });
    } else if($(window).scrollTop() > 112) {
      $(".header-logo").css({
        "position": "absolute",
        "top": "108px"
      });
    }
  }
}

function resizeWindow(e) {
  if (showMap) {
    if (GFW.app) GFW.app.open();
    Filter.calcFiltersPosition();
  }
}

function executeAjax(url, data, callback, type) {
  var jqxhr = null;
  var key = null;
  var val = null;

  type = type ? type : "GET";

  $.ajax({
    url: url,
    type: type,
    data: data,
    success: function(response) {
      if (callback) {
        callback.success(response);
      }
    },
    error: function(status, error) {
      if (callback) {
        callback.error(status, error);
      }
    },
    contentType: 'application/json',
    dataType: 'json'
  });

  return jqxhr;
}
